/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.edu.vtc.iu;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import vn.edu.vtc.dal.InvoiceDAL;
import vn.edu.vtc.dal.ShopDAL;
import vn.edu.vtc.dal.StaffDAL;
import vn.edu.vtc.persistance.Drink;
import vn.edu.vtc.persistance.Invoice;
import vn.edu.vtc.persistance.Shop;
import vn.edu.vtc.persistance.Staff;

/**
 *
 * @author Admin
 */
public class PrintInvoice extends javax.swing.JFrame {

    /**
     * Creates new form PrintInvoice
     */
    public PrintInvoice() {
        initComponents();
        totalPay.setEnabled(false);
        refund.setEnabled(false);
        received.setEnabled(false);
        print.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jInvoiceID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        totalPay = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        received = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        refund = new javax.swing.JTextField();
        print = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoice = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jNoti = new javax.swing.JTextArea();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PRINT INVOICE");
        jLabel1.setVerifyInputWhenFocusTarget(false);

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Input your invoice ID:");

        jInvoiceID.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jInvoiceID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                try {
                    jInvoiceIDKeyReleased(evt);
                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Toltal payment:");

        totalPay.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Recieved:");

        received.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        received.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                receivedKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Refund:");

        refund.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        print.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    printActionPerformed(evt);
                } catch (SQLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        invoice.setColumns(20);
        invoice.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        invoice.setRows(5);
        jScrollPane1.setViewportView(invoice);

        jNoti.setColumns(20);
        jNoti.setRows(5);
        jScrollPane2.setViewportView(jNoti);

        back.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(print)
                                .addGap(34, 34, 34)
                                .addComponent(back)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jInvoiceID)
                                    .addComponent(totalPay)
                                    .addComponent(received)
                                    .addComponent(refund, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jInvoiceID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalPay, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(received, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(refund, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(print)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {// GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        Invoice in = new Invoice();
        int id;
        double total, received, refund;
        total = Double.parseDouble(totalPay.getText());
        received = Double.parseDouble(this.received.getText());
        refund = received - total;
        id = Integer.parseInt(jInvoiceID.getText());
        List<Drink> lst = new ArrayList<>();
        in = InvoiceDAL.getInvoiceByID(id);
        lst = InvoiceDAL.getInvoiceDetails(id);
        Staff st = StaffDAL.getStaffByID(in.getStaffId());
        Shop sh = ShopDAL.getShopById(in.getShopId());
        int i = 1;
        invoice.append("+------------------------------------------------------+\n");
        invoice.append("> " + sh.getName() + "\n> Tel: " + sh.getTel() + "\n> Address: " + sh.getAddress() + "\n");
        invoice.append("+------------------------------------------------------+\n");
        invoice.append("|                                  INVOICE                               |\n");
        invoice.append("+------------------------------------------------------+\n");
        invoice.append("> Invoice code: " + in.getId() + "\n");
        invoice.append("> Date: " + in.getDate() + "\n");
        invoice.append("> Staff: " + st.getName() + ", Tel: " + st.getTel() + "\n");
        invoice.append("+------------------------------------------------------+\n");
        invoice.append("| No. | Name                                                           |\n");
        invoice.append("| Unit Price     | Quantity     | Amount                 |\n");
        invoice.append("+------------------------------------------------------+\n");
        for (Drink drink : lst) {
            invoice.append("|  "+i+"  | "+drink.getName()+"\n");
            invoice.append("|   "+drink.getUnitPrice()+"      |    "+drink.getQuantity()+"           |   "+drink.getAmount()+"               |\n");
    
            // System.out.printf("| %2d | %-40s |\n| %12s | %8d | %17sVND|\n", i, drink.getName(),
            //         String.format("%,.0f", drink.getUnitPrice()), drink.getQuantity(),
            //         String.format("%,.0f", drink.getAmount()));
            invoice.append("+------------------------------------------------------+\n");

            i++;
        }
        invoice.append("+------------------------------------------------------+\n");
        invoice.append(" Total:         " + String.format("%,.0f", total) + "VND\n");
        invoice.append(" Received:  " + String.format("%,.0f", received) + "VND\n");
        invoice.append(" Refund:        " + String.format("%,.0f", refund) + "VND\n");
        invoice.append("+------------------------------------------------------+\n");
        invoice.append("|           Get your laughing gear round this!         |\n");
        invoice.append("+------------------------------------------------------+\n");

    }// GEN-LAST:event_printActionPerformed

    private void jInvoiceIDKeyReleased(java.awt.event.KeyEvent evt) throws SQLException {// GEN-FIRST:event_jInvoiceIDKeyReleased
        // TODO add your handling code here:
        if (jInvoiceID.getText().isEmpty()) {
            jNoti.setText("Invoice is empty!");
        } else {
            if (jInvoiceID.getText().matches("\\d+")) {
                Invoice in = new Invoice();
                int id;
                id = Integer.parseInt(jInvoiceID.getText());
                List<Drink> lst = new ArrayList<>();
                in = InvoiceDAL.getInvoiceByID(id);
                if (in.getId() == 0) {
                    jNoti.setText("Invoice doesn't exist!");
                    totalPay.setText(null);
                } else {
                    jNoti.setText(null);
                    lst = InvoiceDAL.getInvoiceDetails(id);
                    double total = 0.0;
                    for (Drink drink : lst) {
                        total = total + drink.getAmount();
                    }
                    totalPay.setText(String.valueOf(total));
                    received.setEnabled(true);
                }

            } else {
                jNoti.setText("Invoice ID must be a number.");
            }
        }

    }

    private void receivedKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_receivedKeyReleased
        // TODO add your handling code here:
        if (received.getText().isEmpty()) {
            jNoti.setText("Received is empty!");
        } else {
            if (received.getText().matches("\\d+")) {
                double toltalP, rec, rf;
                toltalP = Double.parseDouble(totalPay.getText());
                rec = Double.parseDouble(received.getText());
                if (rec >= toltalP) {
                    jNoti.setText(null);
                    print.setEnabled(true);
                    rf = rec - toltalP;
                    refund.setText(String.format("%,.0f", rf));
                } else {
                    print.setEnabled(false);
                    jNoti.setText("Received must be equal or\ngreater than toltal payment");
                }
            } else {
                jNoti.setText("Received must be a number!");
            }
        }
    }// GEN-LAST:event_receivedKeyReleased

    private void backActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffFrm().setVisible(true);
            }
        });
    }// GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrintInvoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextArea invoice;
    private javax.swing.JTextField jInvoiceID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextArea jNoti;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton print;
    private javax.swing.JTextField received;
    private javax.swing.JTextField refund;
    private javax.swing.JTextField totalPay;
    // End of variables declaration//GEN-END:variables
}
